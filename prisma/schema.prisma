generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  TEMPORARY
  ACTIVE
}

enum Role {
  USER
  MEMBER
  ADMIN
}

model User {
  id          String     @id @default(cuid())
  name        String
  phoneNumber String     @unique
  status      UserStatus @default(TEMPORARY)
  role        Role?      @default(USER)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  sessions       Session[]
  keys           Key[]
  eventEntries   StampEntry[]
  claimedStamps  ClaimableStamp[] // 사용자가 등록한 임시 코드 스탬프들
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Key {
  id             String  @id
  userId         String
  hashedPassword String?
  user           User    @relation(references: [id], fields: [userId], onDelete: Cascade)
  @@unique([id, userId])
}

// --- 이벤트 및 스탬프 관련 모델 ---

model EventCategory {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  events Event[]
}

model Event {
  id            String   @id @default(cuid())
  name          String
  description   String?
  imageUrl      String?
  isAllDay      Boolean   @default(true)
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  categoryId    Int
  category      EventCategory @relation(fields: [categoryId], references: [id])
  participants  StampEntry[]
  claimableStamps ClaimableStamp[] // 이 이벤트에 연결된 임시 코드 스탬프들
}

model StampEntry {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  eventId     String
  event       Event    @relation(fields: [eventId], references: [id])
  stampCardId Int
  stampCard   StampCard @relation(fields: [stampCardId], references: [id])
}

model StampCard {
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  isRedeemed Boolean      @default(false)
  entries    StampEntry[]
  coupon     Coupon?
}

// --- 리워드 및 임시 코드 관련 모델 ---

model Coupon {
  id          String   @id @default(cuid())
  code        String   @unique
  description String
  isUsed      Boolean  @default(false)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  stampCardId Int      @unique
  stampCard   StampCard @relation(fields: [stampCardId], references: [id])
}

// 👈 전화번호 모를 때를 위한 '주인 없는 스탬프' 모델
model ClaimableStamp {
  id              String    @id @default(cuid())
  claimCode       String    @unique
  isClaimed       Boolean   @default(false)
  expiresAt       DateTime
  createdAt       DateTime  @default(now())
  eventId         String
  event           Event     @relation(fields: [eventId], references: [id])
  claimedByUserId String?
  claimedByUser   User?     @relation(fields: [claimedByUserId], references: [id])
}